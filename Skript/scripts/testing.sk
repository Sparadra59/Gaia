#
#Ne fonctionne qu'avec des items de base, pas de custom recipies
#on craft:
#	message "Warm for your feet!"
command /teamtesting:
	trigger:
		set {redteam.%player%} to 1
		message "Vous avez rejoint l'équipe &cRouge"
command /teamtestingoff:
	trigger:
		set {redteam.%player%} to 0
		message "Vous avez quitté l'équipe &cRouge"

	
on damage:
    {redteam.%victim%} is 1:
        {redteam.%attacker%} is 1:
            cancel event
            send "&cCe joueur est dans ton équipe" to attacker
			
#shoot an arrow
#make the player shoot a creeper at speed 10
#shoot a pig from the creeper

#DETECTS BUT WEIRDLY
#on vehicle collide with entity:
#    if event-entity is a player:
#        message "Collision !" to player
#        make player damage event-entity by 2
#    if event-entity is a pig:
#        broadcast "Hit !"

command /mcmmotester:
	trigger:
		message "Fishing %fishing level of player%"

command /timetester:
	trigger:
		set {last.login.%player%} to now
		message "Last Login : %{last.login.%player%}%"
		
command /timetester2:
	trigger:
		send email with subject "Ceci est un message ! Malheureusement je ne sais pas encore faire des lignes séparés. On va se contenter d'un truc de merde." with message "Mail Test" to "hollishkid@gmail.com"
#on join:
#	send resourcepack "[url]" to player
#		
#						#
#						#
#		SkyWars			#
#						#
#						#
#
command /minigameskzlobby:
	trigger:
		set {mini.skz.lobby} to location of player
		message "Vous avez défini le Lobby du SkyWars."
command /minigameskystart:
	trigger:
		add player's location to {mini.skz.start::*}
		message "Vous avez ajouté un Spawn Aléatoire au SkyWars."
#
#
# INITIATION
#
#
command /thisistheskzminigameinitiation:
	trigger:
		if {mini.skz.initiated} is 0:
			if player meets betonquest condition "empty_inventory":
				clear {mini.skz.players::*}
				set {mini.skz.initiated} to 1
				set {mini.skz.%player%} to 1
				set {mini.skz.started} to 0
				set {mini.skz.teams} to 0
	#
				add player to {mini.skz.players::*}
				add 1 to {mini.skz.teams}
				set {mini.skz.teams.%player%} to {mini.skz.teams}
				teleport player to {mini.skz.lobby}
				broadcast "&aUn MiniJeux - &cSkyWars"
				broadcast "&avient d'être lancé par &2%player% &a!"
				broadcast "&aDébut dans &2&l2 &aminutes &a!"
				broadcast "&aRejoignez en -6593,2917 !"
	#
				wait 1 minute
				if {mini.skz.started} is 0:
					broadcast "&aMiniJeux - &cSkyWars"
					broadcast "&aDébut dans &2&l1 minute &a!"
					broadcast "&aRejoignez en -6593,2917 !"
	#
					wait 1 minute
					if {mini.skz.started} is 0:
						if {mini.skz.teams} > 1:
							set {mini.skz.started} to 1
							loop all players:
								if {mini.skz.%loop-player%} is 1:
									message "&a&oL'Assault va commencer !" to loop-player
									message "&a&oVoici les participants :" to loop-player
									message "&2&o%{mini.skz.players::*}%" to loop-player
									message "&c&oVague &2&l%%" to loop-player
									message "&c&oTuez en 30 !" to loop-player
									teleport loop-player to {mini.skz.start}
						else:
							message "Il n'y a pas assez de joueurs."
							message "La partie va être remise !"
# LOGOUT PROCEDURE
#
# Game Specifics 
#	ADD THESE ASWELL TO INSCRIPTION
		
#			
			else:
				message "&c&oVous devez avoir un inventaire vide"
				message "&c&opour pouvoir commencer ce jeu !"
		else:
			message "&c&oCe jeu a déjà été lancé !"
			message "&a&oVous pouvez le rejoindre en parlant au Maître de Jeu !"	
#
#
# INSCRIPTION
#
#
command /thisistheskzminigameinscription:
	trigger:
		if {mini.skz.initiated} is 1:
			if {mini.skz.started} is 0:
				if player meets betonquest condition "empty_inventory":
					set {mini.skz.%player%} to 1
					add player to {mini.skz.players::*}
					add 1 to {mini.skz.teams}
					set {mini.skz.teams.%player%} to {mini.skz.teams}
					teleport player to {mini.skz.lobby}
					message "&aVous rejoignez la partie."
					message "&aJoueurs dans la partie :"
					message "&2%{mini.skz.players::*}%"
					if {mini.skz.teams} > 9:
						set {mini.skz.started} to 1
						loop all players:
							if {mini.skz.%loop-player%} is 1:
								LAUNCH GAME
				
				
				else:
				message "&c&oVous devez avoir un inventaire vide"
				message "&c&opour pouvoir commencer ce jeu !"
			else:
				message "&d&oCe minijeux a déjà commencé."
				message "&d&oMerci d'attendre."	
		else:
			message "&d&oCe MiniJeux n'a pas encore été lancé."
			message "&d&oVous pouvez le lancer en parlant au Maître de Jeu."
#
#
# LEAVER TESTER
#
#
command /thisistheleaveconsolecommandforskz:
	trigger:
		if {mini.skz.%player%} is 1:
			wait 1 second
			set {mini.in.ass} to 0
			set {mini.skz.%player%} to 0
			wait 1 second
			loop all players:
				if {mini.skz.%loop-player%} is 1:
					add 1 to {mini.in.ass}
			if {mini.in.ass} > 0:
				loop all players:
					if {mini.skz.%loop-player%} is 1:
						message "&c&oUn des joueurs a quitté la partie." to loop-player
						set {mini.in.ass} to 0
			else:
				clear {mini.skz.players::*}
				set {mini.in.ass} to 0
				set {mini.skz.mobs} to 0
				set  to 0
				set {mini.skz.started} to 0
				set {mini.skz.initiated} to 0
				broadcast "&cL'Assault est terminé ! Plus aucun aventurier dans la zone !"
#
# Losers
#
on death of a player:
	if {mini.skz.%player%} is 1:
		message "&c&oVous êtes mort pendant la partie."
		message "&c&oVous perdez la partie de SkyWars !"
		set {mini.in.ass} to 0
		teleport player to {mini.skz.lobby}
#					
#
# OUT
#
#
on rightclick on sign:
    if line 1 of the clicked block is "[Sortie]":
        if line 2 of the clicked block is "Retour vers":
            if line 3 of the clicked block is "Maître de Jeu":
                teleport player to {mini.start}